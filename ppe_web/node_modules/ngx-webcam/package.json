{
  "_from": "ngx-webcam",
  "_id": "ngx-webcam@0.2.6",
  "_inBundle": false,
  "_integrity": "sha512-syf8YwjOswRyTq55Cw7rrjFAmdtkmVs5BGiifuudqYC9u8hVGMYiZNalVqTbNp7DMh8zy7qRzuACnJhKhbnmRA==",
  "_location": "/ngx-webcam",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "ngx-webcam",
    "fetchSpec": "latest",
    "name": "ngx-webcam",
    "raw": "ngx-webcam",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ngx-webcam/-/ngx-webcam-0.2.6.tgz",
  "_shasum": "a2ae07a0024d9cb72fbd6f0fc4a3cf617030a6ea",
  "_shrinkwrap": null,
  "_spec": "ngx-webcam",
  "_where": "/home/desktop-obs-66/Documents/PPE_project/model_6/ppe_web",
  "author": {
    "name": "basst314"
  },
  "bugs": {
    "url": "https://github.com/basst314/ngx-webcam/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "davidshen84"
    }
  ],
  "dependencies": {
    "tslib": "^1.9.0"
  },
  "deprecated": false,
  "description": "A simple Angular 4+ Webcam-Component. Pure &amp; minimal, no Flash-Fallback. <a href=\"https://basst314.github.io/ngx-webcam/?\" target=\"_blank\">See the Demo!</a>",
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.800.3",
    "@angular/animations": "^8.0.1",
    "@angular/cli": "~8.0.3",
    "@angular/common": "^8.0.1",
    "@angular/compiler": "^8.0.1",
    "@angular/compiler-cli": "^8.0.1",
    "@angular/core": "^8.0.1",
    "@angular/forms": "^8.0.1",
    "@angular/language-service": "^8.0.1",
    "@angular/platform-browser": "^8.0.1",
    "@angular/platform-browser-dynamic": "^8.0.1",
    "@angular/router": "^8.0.1",
    "@types/jasmine": "~3.3.13",
    "@types/jasminewd2": "~2.0.6",
    "@types/node": "~12.0.8",
    "codelyzer": "^5.0.1",
    "core-js": "^3.1.3",
    "jasmine-core": "~3.4.0",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~4.1.0",
    "karma-chrome-launcher": "~2.2.0",
    "karma-cli": "~2.0.0",
    "karma-coverage-istanbul-reporter": "^2.0.5",
    "karma-jasmine": "~2.0.1",
    "karma-jasmine-html-reporter": "^1.4.2",
    "ng-packagr": "^5.1.0",
    "protractor": "^5.4.2",
    "rxjs": "^6.5.2",
    "ts-node": "~8.3.0",
    "tsickle": "^0.35.0",
    "tslib": "^1.10.0",
    "tslint": "~5.17.0",
    "typescript": "^3.4.5",
    "zone.js": "~0.9.1"
  },
  "es2015": "fesm2015/ngx-webcam.js",
  "esm2015": "esm2015/ngx-webcam.js",
  "esm5": "esm5/ngx-webcam.js",
  "fesm2015": "fesm2015/ngx-webcam.js",
  "fesm5": "fesm5/ngx-webcam.js",
  "homepage": "https://github.com/basst314/ngx-webcam#readme",
  "keywords": [
    "Angular",
    "Angular 4",
    "Angular 5",
    "Angular 6",
    "Angular 7",
    "Angular 8",
    "Camera",
    "Smartphone",
    "Tablet",
    "Webcam"
  ],
  "license": "MIT",
  "main": "bundles/ngx-webcam.umd.js",
  "metadata": "ngx-webcam.metadata.json",
  "module": "fesm5/ngx-webcam.js",
  "name": "ngx-webcam",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0",
    "rxjs": "^5.0.0 || ^6.0.0"
  },
  "private": false,
  "readme": "# Ngx-Webcam [![npm version](https://badge.fury.io/js/ngx-webcam.svg)](https://badge.fury.io/js/ngx-webcam) [![Build Status](https://travis-ci.org/basst314/ngx-webcam.svg?branch=master)](https://travis-ci.org/basst314/ngx-webcam)\r\n\r\nA simple Angular 4+ Webcam-Component. Pure &amp; minimal, no Flash-Fallback. <a href=\"https://basst314.github.io/ngx-webcam/?\" target=\"_blank\">See the Demo!</a>\r\n\r\n**Plug-and-play.** This library contains a single webcam-module which can be imported into nearly every Angular 4+ project.\r\n\r\n**Simple to use.** The one component gives you full control and lets you take snapshots via actions and event bindings.\r\n\r\n**Minimal.** No unnecessary Flash-fallbacks, no bundle-size bloating.\r\n\r\n## Demo\r\nTry out the <a href=\"https://basst314.github.io/ngx-webcam/?\" target=\"_blank\">Live-Demo</a> or see the <a href=\"https://github.com/basst314/ngx-webcam-demo\" target=\"_blank\">Demo-Project</a>.\r\n\r\n## Features\r\n* Webcam live view\r\n* Photo capturing\r\n* Smartphone compatibility for modern OS's (OS must support WebRTC/UserMedia API)\r\n* Access to front- and back-camera, if multiple cameras exist\r\n* Portrait & Landscape mode on smartphones\r\n* Mirrored view for user-facing cameras, to enhance user experience (e.g. on smartphones)\r\n* Capturing of lossless pixel image data for better post-processing.\r\n\r\n\r\n## Prerequisites\r\n\r\n### Runtime Dependencies\r\n* Angular: `^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0`\r\n* RxJs: `^5.0.0 || ^6.0.0`\r\n* App must be served on a secure context (https or localhost)\r\n\r\n### Client\r\n* [Current Browser](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Browser_compatibility) w/ HTML5 and WebRTC/UserMedia support (Chrome >53, Safari >11, Firefox >38, Edge)\r\n* Webcam :)\r\n* User permissions to access the webcam\r\n\r\n## Usage\r\n1) Install the library via standard npm command:\r\n\r\n`npm install --save ngx-webcam`\r\n\r\n2) Import the `WebcamModule` into your Angular module:\r\n\r\n```typescript\r\nimport {WebcamModule} from 'ngx-webcam';\r\n\r\n@NgModule({\r\n  imports: [\r\n    WebcamModule,\r\n    ...\r\n  ],\r\n  ...\r\n})\r\nexport class AppModule { }\r\n```\r\n\r\n3) Use the `WebcamComponent` on your pages:\r\n\r\n`<webcam></webcam>`\r\n\r\nAs simple as that. \r\n\r\nFor more examples, see the code in the <a href=\"https://github.com/basst314/ngx-webcam-demo\" target=\"_blank\">Demo-Project</a>.\r\n\r\n## Options and Events\r\nThis section describes the basic inputs/outputs of the component. All inputs are optional.\r\n### Inputs\r\n* `trigger: Observable<void>`: An `Observable` to trigger image capturing. When it fires, an image will be captured and emitted (see Outputs).\r\n* `width: number`: The maximal video width of the webcam live view.\r\n* `height: number`: The maximal video height of the webcam live view. The actual view will be placed within these boundaries, respecting the aspect ratio of the video stream.\r\n* `videoOptions: MediaTrackConstraints`: Defines constraints ([MediaTrackConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints)) to apply when requesting the video track.\r\n* `mirrorImage: string | WebcamMirrorProperties`: Flag to control image mirroring. If the attribute is missing or `null` and a webcam claims to be user-facing, the image will be mirrored (x-axis) to provide a better user experience. A string value of `\"never\"` will prevent mirroring, whereas a value of `\"always\"` will mirror every webcam stream, even if the webcam cannot be detected as user-facing. For future extensions, the `WebcamMirrorProperties` object can also be used to set these values.\r\n* `allowCameraSwitch: boolean`: Flag to enable/disable camera switch. If enabled, a switch icon will be displayed if multiple cameras are found.\r\n* `switchCamera: Observable<boolean|string>`: Can be used to cycle through available cameras (true=forward, false=backwards), or to switch to a specific device by deviceId (string).\r\n* `captureImageData: boolean = false`: Flag to enable/disable capturing of a lossless pixel ImageData object when a snapshot is taken. ImageData will be included in the emitted `WebcamImage` object.\r\n* `imageType: string = 'image/jpeg'`: [Image type](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL) to use when capturing snapshots. Default is 'image/jpeg'.\r\n* `imageQuality: number = 0.92`: [Image quality](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL) to use when capturing snapshots. Must be a number between 0..1. Default is 0.92.\r\n\r\n### Outputs\r\n* `imageCapture: EventEmitter<WebcamImage>`: Whenever an image is captured (i.e. triggered by `[trigger]`), the image is emitted via this `EventEmitter`. The image data is contained in the `WebcamImage` data structure as both, plain Base64 string and data-url.\r\n* `imageClick: EventEmitter<void>`: An `EventEmitter` to signal clicks on the webcam area.\r\n* `initError: EventEmitter<WebcamInitError>`: An `EventEmitter` to signal errors during the webcam initialization.\r\n* `cameraSwitched: EventEmitter<string>`: Emits the active deviceId after the active video device has been switched.\r\n\r\n## Good To Know\r\n### How to determine if the user denied camera access\r\nWhen camera initialization fails for some reason, the component emits a `WebcamInitError` via the `initError` EventEmitter. If provided by the browser, this object contains a field `mediaStreamError: MediaStreamError` which contains information about why UserMedia initialization failed. According to [Mozilla API docs](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia), this object contains a `name` attribute which gives insight about the reason.\r\n> If the user denies permission, or matching media is not available, then the promise is rejected with NotAllowedError or NotFoundError respectively.\r\n\r\nIn case a user denied permissions this can be determined like this:\r\n```\r\n  <webcam (initError)=\"handleInitError($event)\"></webcam>\r\n```\r\n```\r\n  public handleInitError(error: WebcamInitError): void {\r\n    if (error.mediaStreamError && error.mediaStreamError.name === \"NotAllowedError\") {\r\n      console.warn(\"Camera access was not allowed by user!\");\r\n    }\r\n  }\r\n```\r\n\r\n## Development\r\nHere you can find instructions on how to start developing this library.\r\n\r\n### Build\r\nRun `npm run packagr` to build the library. The build artifacts will be stored in the `dist/` directory.\r\n\r\n### Start\r\nRun `npm start` to build and run the surrounding webapp with the `WebcamModule`. Essential for live-developing.\r\n\r\n### Generate docs/\r\nRun `npm run docs` to generate the live-demo documentation pages in the `docs/` directory.\r\n\r\n### Running Unit Tests\r\nRun `npm run test` to run unit-tests.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/basst314/ngx-webcam.git"
  },
  "sideEffects": false,
  "typings": "ngx-webcam.d.ts",
  "version": "0.2.6"
}
